# Standard st.cmd configuration. Can be sourced in an IOC 
# startup file by doing:
# < $(ADNED)/st.cmd.config
# See example IOC.
# Need to specify an environment variable for the asyn port, 
# which is also prepended to port names for the plugins, like:
# epicsEnvSet PORT "N"

ADnEDConfig("$(PORT)", -1, -1, 1)

#asynSetTraceMask("$(PORT)",0,0x11)

# Plugins for TOF data

#ROI plugins to extract TOF data
NDROIConfigure("$(PORT).DET1.TOF", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
NDROIConfigure("$(PORT).DET2.TOF", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
NDROIConfigure("$(PORT).DET3.TOF", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
NDROIConfigure("$(PORT).DET4.TOF", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)

#ADnEDMask plugins to act as a passband or band reject filter on the spectrum
NDMaskConfigure("$(PORT).DET1.TOF.MASK", 100, 0, "$(PORT).DET1.TOF", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET2.TOF.MASK", 100, 0, "$(PORT).DET2.TOF", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET3.TOF.MASK", 100, 0, "$(PORT).DET3.TOF", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET4.TOF.MASK", 100, 0, "$(PORT).DET4.TOF", 0, 8, -1, -1, 0, 0)

#Standard arrays plugin for channel access visualisation of the TOF arrays
NDStdArraysConfigure("$(PORT).DET1.TOF.ARR", 100, 0, "$(PORT).DET1.TOF.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET2.TOF.ARR", 100, 0, "$(PORT).DET2.TOF.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET3.TOF.ARR", 100, 0, "$(PORT).DET3.TOF.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET4.TOF.ARR", 100, 0, "$(PORT).DET4.TOF.MASK", 0, -1, 0, 0)

#ROI plugins to do ROI/Stats on the TOF spectrums (configure 8 by default)
NDROIStatConfigure("$(PORT).DET1.TOF.ROI", 100, 0, "$(PORT).DET1.TOF.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET2.TOF.ROI", 100, 0, "$(PORT).DET2.TOF.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET3.TOF.ROI", 100, 0, "$(PORT).DET3.TOF.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET4.TOF.ROI", 100, 0, "$(PORT).DET4.TOF.MASK", 0, 8, -1, -1, 0, 0)

#asynSetTraceMask("$(PORT).DET1.TOF.ROI",0,0xFF)
#asynSetTraceIOMask("$(PORT).DET1.TOF.ROI",0,0xFF)

# Plugins for pixel data

#ROI plugins to extract pixel event data
ADnEDPixelROIConfig("$(PORT).DET1.XY", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
ADnEDPixelROIConfig("$(PORT).DET2.XY", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
ADnEDPixelROIConfig("$(PORT).DET3.XY", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)
ADnEDPixelROIConfig("$(PORT).DET4.XY", 100, 0, "$(PORT)", 0, -1, -1, 0, 0)

#ADnEDMask plugins to mask out part of the spectrum
NDMaskConfigure("$(PORT).DET1.XY.MASK", 100, 0, "$(PORT).DET1.XY", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET2.XY.MASK", 100, 0, "$(PORT).DET2.XY", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET3.XY.MASK", 100, 0, "$(PORT).DET3.XY", 0, 8, -1, -1, 0, 0)
NDMaskConfigure("$(PORT).DET4.XY.MASK", 100, 0, "$(PORT).DET4.XY", 0, 8, -1, -1, 0, 0)

#Standard arrays plugin for channel access visualisation of pixel event data
NDStdArraysConfigure("$(PORT).DET1.XY.ARR", 100, 0, "$(PORT).DET1.XY.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET2.XY.ARR", 100, 0, "$(PORT).DET2.XY.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET3.XY.ARR", 100, 0, "$(PORT).DET3.XY.MASK", 0, -1, 0, 0)
NDStdArraysConfigure("$(PORT).DET4.XY.ARR", 100, 0, "$(PORT).DET4.XY.MASK", 0, -1, 0, 0)

#ROI plugins to do ROI on the pixel event data (configure 8 by default)
# NOTE: ROI0 is used for auto scaling on the CSS image.
NDROIStatConfigure("$(PORT).DET1.XY.ROI", 100, 0, "$(PORT).DET1.XY.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET2.XY.ROI", 100, 0, "$(PORT).DET2.XY.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET3.XY.ROI", 100, 0, "$(PORT).DET3.XY.MASK", 0, 8, -1, -1, 0, 0)
NDROIStatConfigure("$(PORT).DET4.XY.ROI", 100, 0, "$(PORT).DET4.XY.MASK", 0, 8, -1, -1, 0, 0)

#Stats plugins to do advance statistics on XY plot (and produce profile plots).
NDStatsConfigure("$(PORT).DET1.XY.STAT", 100, 0, "$(PORT).DET1.XY.MASK", 0, -1, -1, 0, 0)
NDStatsConfigure("$(PORT).DET2.XY.STAT", 100, 0, "$(PORT).DET2.XY.MASK", 0, -1, -1, 0, 0)
NDStatsConfigure("$(PORT).DET3.XY.STAT", 100, 0, "$(PORT).DET3.XY.MASK", 0, -1, -1, 0, 0)
NDStatsConfigure("$(PORT).DET4.XY.STAT", 100, 0, "$(PORT).DET4.XY.MASK", 0, -1, -1, 0, 0)

#Double the size of the scanOnce ring buffer
scanOnceSetQueueSize(2000)

#End of st.cmd.config
