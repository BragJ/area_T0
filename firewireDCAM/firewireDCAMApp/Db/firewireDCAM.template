#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/firewireDCAM_vdct.dbd")
#! DBDEND


# # \file
# # \brief Template database file to control the features of a firewire camera.
# # See the detailled description for information about macros and how features 
# # can be controlled and read out: 
# #
# # This templates provides control and read back of all camera 'features' provided through
# # the IIDC DCAM protocol. The PV names are put together using the @c P and @c R macros,
# # the feature name [brackets in the list below] and the feature parameters. For instance the PV
# # name for the Gain readback would look like: @verbatim $(P)$(R):GAIN_RBV @endverbatim
# #
# # \section feature_list Feature List
# # See below for the full list of all features but keep in mind
# # that not all firewire cameras need to implement all of these features:
# # \li Brightness [BRIGHTNESS]
# # \li Exposure [EXPOSURE]
# # \li Sharpness [SHARPNESS]
# # \li White Balance [WHITEB]
# # \li Hue [HUE]
# # \li Saturation [SATURATION]
# # \li Gamma [GAMMA]
# # \li Shutter [SHUTTER]
# # \li Gain [GAIN]
# # \li Iris [IRIS]
# # \li Focus [FOCUS]
# # \li Temperature [TEMP]
# # \li Trigger [TRIGGER]
# # \li Trigger Delay [TRIGDLY]
# # \li White Shading [WHITES]
# # \li Framerate [FRAMERATE]*
# # \li Zoom [ZOOM]
# # \li Pan [PAN]
# # \li Tilt [TILT]
# # \li Optical Filter [FILTER]
# # \li Capture Size [CAPTSIZE]
# # \li Capture Quality [QUALITY]
# #
# # \note *: Frame rate is not recommended to set using the feature interface. The @c :FR and @c :FR_RBV
# # records provide more convenient mbbo/mbbi enum interface to available framerates.
# # 
# # \section feature_parameters Feature Parameters
# # For each feature a set of 12 records control and read back all available parameters related to the individual feature.
# # The following lists all the parameters that can be read and set in every feature:
# # \li Read back whether the camera supports the specific feature or not: "not available" or "available" (bi) [_AVL]
# # \li Set integer value (ao) []
# # \li Read current integer value (ai) [_RBV]
# # \li Set control mode: manual = user configured; auto = camera sets values (mbbo) [_CTRL]*
# # \li Read back current control mode (mbbi) [_CTRL_RBV]
# # \li Read back maximum integer boundary (ai) [_MAX]
# # \li Read back minimum integer boundary (ai) [_MIN]
# # \li Read whether the camera supports 'absolute' feature control. I.e. floating point read and/or write control
# #     of the specific feature. "not available" or "available" (bi) [_ABS_AVL]
# # \li Set the features absolute (floating point) value (ao) [_ABS]**
# # \li Read back the current absolute value of the given feature (ai) [_ABS_RBV]
# # \li Read the current absolute maximum value (ai) [_ABS_MAX]
# # \li Read the current absolute minimum value (ai) [_ABS_MIN]
# #
# # \note *: This may not be implemented in all cameras, however all cameras should be able to manage attempts
# # to change this setting without crashing.
# # \note **: Setting this absolute value does not currently work. See the release notes for details.
# #
# #
# Macros:
# % macro, P, Device Prefix
# % macro, R, Device Suffix
# % macro, PORT, Asyn Port name
# % macro, FR, Max framerate enum
# % macro, DUMMY, Dummy empty macro to satisfy vdct
# #
# All tags starting with gdatag are DLS specific for GDA
# % gdatag, template, firewireDCAM, $(PORT)_firewireDCAM, $(PORT) firewireDCAM class instance
# #
# This associates the template with an edm screen
# % gui, $(PORT), edmtab, firewireDCAM.edl, P=$(P),R=$(R)
# #
# # Change the max framerate when the camera is not in the ROI/format7 mode
# % gdatag, mbbinary, rw, $(PORT)_firewireDCAM, FR, Set frame rate
record(mbbo, "$(P)$(R)FR") {
  field(SCAN, "Passive")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT) 0)FDC_FRAMERATE")
  field(ZRST, "N/A")
  field(ONST, "1.875")
  field(TWST, "3.75")
  field(THST, "7.5")
  field(FRST, "15")
  field(FVST, "30")
  field(SXST, "60")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(VAL, "$(FR=3)")
  field(PINI, "YES")
}

## Read back the max framerate setting when not in ROI/format7 mode.
# % gdatag, mbbinary, ro, $(PORT)_firewireDCAM, FR_RBV, Readback for frame rate
record(mbbi, "$(P)$(R)FR_RBV") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(ZRST, "N/A")
  field(ONST, "1.875")
  field(TWST, "3.75")
  field(THST, "7.5")
  field(FRST, "15")
  field(FVST, "30")
  field(SXST, "60")
  field(INP, "@asyn($(PORT) 0)FDC_FRAMERATE")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
}

# % gdatag, pv, ro, $(PORT)_firewireDCAM, VIDEOMODE
record(ai, "$(P)$(R)VIDEOMODE") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(DESC, "Read the video mode number")  
  field(INP, "@asyn($(PORT) 0)FDC_VIDEOMODE")
}

# % gdatag, pv, ro, $(PORT)_firewireDCAM, BANDWIDTH
record(ai, "$(P)$(R)BANDWIDTH") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(DESC, "Read the bandwidth percentage")    
  field(INP, "@asyn($(PORT) 0)FDC_BANDWIDTH")
  field(EGU, "%")
}

# # Only 2 data types are supported, unsigned 8 and 16 bit integers
record(mbbo, "$(P)$(R)DataType") {
  field(ZRST, "UInt8")
  field(ZRVL, "1")
  field(ONST, "UInt16")
  field(ONVL, "3")
  field(TWST, "$(DUMMY=)")
  field(TWVL, "0")
  field(THST, "$(DUMMY=)")
  field(THVL, "0")
  field(FRST, "$(DUMMY=)")
  field(FRVL, "0")
  field(FVST, "$(DUMMY=)")
  field(FVVL, "0")
  field(SXST, "$(DUMMY=)")
  field(SXVL, "0")
  field(SVST, "$(DUMMY=)")
  field(SVVL, "0")
}

record(mbbi, "$(P)$(R)DataType_RBV") {
  field(ZRST, "UInt8")
  field(ZRVL, "1")
  field(ONST, "UInt16")
  field(ONVL, "3")
  field(TWST, "$(DUMMY=)")
  field(TWVL, "0")
  field(THST, "$(DUMMY=)")
  field(THVL, "0")
  field(FRST, "$(DUMMY=)")
  field(FRVL, "0")
  field(FVST, "$(DUMMY=)")
  field(FVVL, "0")
  field(SXST, "$(DUMMY=)")
  field(SXVL, "0")
  field(SVST, "$(DUMMY=)")
  field(SVVL, "0")
}

# # Redefine the color mode choices from ADBase.template to only have those that the aravisCamera
# # driver supports.  Keep the same values (xxVL), but change the menu numbers.
record(mbbo, "$(P)$(R)ColorMode") {
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(OUT, "@asyn($(PORT),0)COLOR_MODE")
  field(ZRST, "Mono")
  field(ZRVL, "0")
  field(ONST, "Bayer")
  field(ONVL, "1")
  field(TWST, "RGB1")
  field(TWVL, "2")
  field(THST, "YUV444")
  field(THVL, "5")
  field(FRST, "YUV422")
  field(FRVL, "6")
  field(FVST, "YUV421")
  field(FVVL, "7")
  field(SXST, "$(DUMMY=)")
  field(SXVL, "0")
  field(SVST, "$(DUMMY=)")
  field(SVVL, "0")
}

record(mbbi, "$(P)$(R)ColorMode_RBV") {
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)COLOR_MODE")
  field(ZRST, "Mono")
  field(ZRVL, "0")
  field(ONST, "Bayer")
  field(ONVL, "1")
  field(TWST, "RGB1")
  field(TWVL, "2")
  field(THST, "YUV444")
  field(THVL, "5")
  field(FRST, "YUV422")
  field(FRVL, "6")
  field(FVST, "YUV421")
  field(FVVL, "7")
  field(SXST, "$(DUMMY=)")
  field(SXVL, "0")
  field(SVST, "$(DUMMY=)")
  field(SVVL, "0")
  field(SCAN, "I/O Intr")
}

# Disable some features that aren't used
record(bo, "$(P)$(R)ReverseX")
{
    field(DISA, "1")
}
record(bo, "$(P)$(R)ReverseY")
{
    field(DISA, "1")
}
record(longout, "$(P)$(R)BinX")
{
    field(DISA, "1")
}
record(longin, "$(P)$(R)BinX_RBV")
{
    field(DISA, "1")
}
record(longout, "$(P)$(R)BinY")
{
    field(DISA, "1")
}
record(longin, "$(P)$(R)BinY_RBV")
{
    field(DISA, "1")
}
record(longout, "$(P)$(R)NumExposures") {
  field(DISA, "1")
}  
record(longin, "$(P)$(R)NumExposures_RBV") {
  field(DISA, "1")
}  
record(longin, "$(P)$(R)NumExposuresCounter_RBV") {
  field(DISA, "1")
}

record(calcout, "$(P)$(R)IsFixedMode") {
  field(INPA, "$(P)$(R)VIDEOMODE CP")
  field(CALC, "A<88")
  field(OUT, "$(P)$(R)FanoutDis PP")
}

record(dfanout, "$(P)$(R)FanoutDis") {
  field(OUTA, "$(P)$(R)MinX.DISA PP")
  field(OUTB, "$(P)$(R)MinX_RBV.DISA PP")
  field(OUTC, "$(P)$(R)MinY.DISA PP")
  field(OUTD, "$(P)$(R)MinY_RBV.DISA PP")
  field(OUTE, "$(P)$(R)SizeX.DISA PP")
  field(OUTF, "$(P)$(R)SizeX_RBV.DISA PP")
  field(OUTG, "$(P)$(R)SizeY.DISA PP")
  field(OUTH, "$(P)$(R)SizeY_RBV.DISA PP")
}
  
expand("firewireDCAM_feature.vdb", firewireDCAM_feature0) {
  macro(NUM, "0")
  macro(FEAT, "BRIGHTNESS")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature1) {
  macro(NUM, "1")
  macro(FEAT, "EXPOSURE")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature2) {
  macro(NUM, "2")
  macro(FEAT, "SHARPNESS")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature3) {
  macro(NUM, "3")
  macro(FEAT, "WHITEB")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature4) {
  macro(NUM, "4")
  macro(FEAT, "HUE")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature5) {
  macro(NUM, "5")
  macro(FEAT, "SATURATION")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature6) {
  macro(NUM, "6")
  macro(FEAT, "GAMMA")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature7) {
  macro(NUM, "7")
  macro(FEAT, "SHUTTER")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature8) {
  macro(NUM, "8")
  macro(FEAT, "GAIN")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature9) {
  macro(NUM, "9")
  macro(FEAT, "IRIS")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature10) {
  macro(NUM, "10")
  macro(FEAT, "FOCUS")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature11) {
  macro(NUM, "11")
  macro(FEAT, "TEMP")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature12) {
  macro(NUM, "12")
  macro(FEAT, "TRIGGER")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature13) {
  macro(NUM, "13")
  macro(FEAT, "TRIGDLY")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature14) {
  macro(NUM, "14")
  macro(FEAT, "WHITES")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature15) {
  macro(NUM, "15")
  macro(FEAT, "FRAMERATE")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature16) {
  macro(NUM, "16")
  macro(FEAT, "ZOOM")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature17) {
  macro(NUM, "17")
  macro(FEAT, "PAN")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature18) {
  macro(NUM, "18")
  macro(FEAT, "TILT")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature19) {
  macro(NUM, "19")
  macro(FEAT, "FILTER")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature20) {
  macro(NUM, "20")
  macro(FEAT, "CAPTSIZE")
}

expand("firewireDCAM_feature.vdb", firewireDCAM_feature21) {
  macro(NUM, "21")
  macro(FEAT, "QUALITY")
}

#! Further lines contain data used by VisualDCT
#! View(3090,0,1.0)
#! Record("$(P)$(R)FR",20,20,0,0,"$(P)$(R)FR")
#! Record("$(P)$(R)FR_RBV",260,28,0,0,"$(P)$(R)FR_RBV")
#! Record("$(P)$(R)VIDEOMODE",500,22,0,0,"$(P)$(R)VIDEOMODE")
#! Record("$(P)$(R)BANDWIDTH",740,28,0,0,"$(P)$(R)BANDWIDTH")
#! Record("$(P)$(R)DataType",940,21,0,0,"$(P)$(R)DataType")
#! Record("$(P)$(R)DataType_RBV",20,21,0,0,"$(P)$(R)DataType_RBV")
#! Record("$(P)$(R)ColorMode",260,20,0,0,"$(P)$(R)ColorMode")
#! Record("$(P)$(R)ColorMode_RBV",500,20,0,0,"$(P)$(R)ColorMode_RBV")

#! TemplateInstance("firewireDCAM_feature0",960,520,0,"")
#! TemplateField("firewireDCAM_feature0","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature0","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature1",240,800,0,"")
#! TemplateField("firewireDCAM_feature1","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature1","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature2",480,800,0,"")
#! TemplateField("firewireDCAM_feature2","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature2","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature3",720,800,0,"")
#! TemplateField("firewireDCAM_feature3","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature3","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature4",720,520,0,"")
#! TemplateField("firewireDCAM_feature4","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature4","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature5",940,800,0,"")
#! TemplateField("firewireDCAM_feature5","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature5","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature6",1180,520,0,"")
#! TemplateField("firewireDCAM_feature6","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature6","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature7",1160,800,0,"")
#! TemplateField("firewireDCAM_feature7","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature7","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature8",1400,540,0,"")
#! TemplateField("firewireDCAM_feature8","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature8","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature9",1640,540,0,"")
#! TemplateField("firewireDCAM_feature9","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature9","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature10",2420,20,0,"")
#! TemplateField("firewireDCAM_feature10","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature10","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature11",2660,20,0,"")
#! TemplateField("firewireDCAM_feature11","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature11","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature12",2900,20,0,"")
#! TemplateField("firewireDCAM_feature12","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature12","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature13",3140,20,0,"")
#! TemplateField("firewireDCAM_feature13","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature13","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature14",3380,20,0,"")
#! TemplateField("firewireDCAM_feature14","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature14","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature15",3620,20,0,"")
#! TemplateField("firewireDCAM_feature15","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature15","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature16",3860,20,0,"")
#! TemplateField("firewireDCAM_feature16","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature16","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature17",4100,20,0,"")
#! TemplateField("firewireDCAM_feature17","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature17","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature18",4340,20,0,"")
#! TemplateField("firewireDCAM_feature18","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature18","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature19",4580,20,0,"")
#! TemplateField("firewireDCAM_feature19","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature19","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature20",240,520,0,"")
#! TemplateField("firewireDCAM_feature20","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature20","FEAT",16777215,0,1)


#! TemplateInstance("firewireDCAM_feature21",480,520,0,"")
#! TemplateField("firewireDCAM_feature21","NUM",16777215,0,1)
#! TemplateField("firewireDCAM_feature21","FEAT",16777215,0,1)

