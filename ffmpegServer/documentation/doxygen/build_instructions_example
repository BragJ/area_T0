# This file was automatically generated on Thu 24 Jul 2014 16:29:03 BST from
# source: /home/up45/github/ffmpegServer/etc/makeIocs/example.xml
# 
# *** Please do not edit this file: edit the source file instead. ***
# 
/**
\page build_instructions_example Build Instructions for example
Build Instructions for example
<ol>
<li> Add the dependencies to configure/RELEASE.
\verbatim
ASYN=/dls_sw/prod/R3.14.12.3/support/asyn/4-21
BUSY=/dls_sw/prod/R3.14.12.3/support/busy/1-4dls1
AREADETECTOR=/dls_sw/prod/R3.14.12.3/support/areaDetector/1-9dls13
FFMPEGSERVER=/home/up45/github/ffmpegServer
\endverbatim

<li> Add the DBD dependencies to src/Makefile
\verbatim
example_DBD += base.dbd
example_DBD += asyn.dbd
example_DBD += busySupport.dbd
example_DBD += ADSupport.dbd
example_DBD += NDPluginSupport.dbd
example_DBD += simDetectorSupport.dbd
example_DBD += ffmpegServer.dbd
\endverbatim

<li> Add the LIBS dependencies to src/Makefile
\verbatim
example_LIBS += ffmpegServer
example_LIBS += avdevice
example_LIBS += avformat
example_LIBS += avcodec
example_LIBS += avutil
example_LIBS += swscale
example_LIBS += simDetector
example_LIBS += NDPlugin
example_LIBS += ADBase
example_LIBS += netCDF
example_LIBS += cbfad
example_LIBS += NeXus
example_LIBS += hdf5
example_LIBS += sz
example_LIBS += PvAPI
example_LIBS += GraphicsMagick++
example_LIBS += GraphicsMagickWand
example_LIBS += GraphicsMagick
example_LIBS += busy
example_LIBS += asyn
example_SYS_LIBS += tiff
example_SYS_LIBS += jpeg
example_SYS_LIBS += z
example_SYS_LIBS += gomp
example_SYS_LIBS += X11
example_SYS_LIBS += xml2
example_SYS_LIBS += png12
example_SYS_LIBS += bz2
example_SYS_LIBS += Xext
example_SYS_LIBS += freetype
\endverbatim

<li> Use the template files to add records to the database.
\verbatim

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/ADBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "BLxxI-DI-PHDGN-01", ":CAM:", "C1.CAM", "1", "0" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/simDetector.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "BLxxI-DI-PHDGN-01", ":CAM:", "C1.CAM", "1", "0" }
}

# Macros:
#  P             Device Prefix
#  R             Device Suffix
#  PORT          Asyn Port name
#  TIMEOUT       Timeout
#  ADDR          Asyn Port address
#  NDARRAY_PORT  Input Array Port
#  NDARRAY_ADDR  Input Array Address
#  Enabled       Plugin Enabled at startup?
file $(AREADETECTOR)/db/NDPluginBase.template
{
pattern { P, R, PORT, TIMEOUT, ADDR, NDARRAY_PORT, NDARRAY_ADDR, Enabled }
    { "BLxxI-DI-PHDGN-01", ":MJPG:", "C1.MJPG", "1", "0", "C1.CAM", "0", "1" }
    { "BLxxI-DI-PHDGN-01", ":FILE:", "C1.FILE", "1", "0", "C1.CAM", "0", "0" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  QUALITY  Jpeg Quality in percent
#  MAXW     Maximum Jpeg Width
#  MAXH     Maximum Jpeg Height
file $(FFMPEGSERVER)/db/ffmpegStream.template
{
pattern { P, R, PORT, QUALITY, MAXW, MAXH }
    { "BLxxI-DI-PHDGN-01", ":MJPG:", "C1.MJPG", "100", "1600", "1200" }
}

# Macros:
#  P        Device Prefix
#  R        Device Suffix
#  PORT     Asyn Port name
#  TIMEOUT  Timeout
#  ADDR     Asyn Port address
file $(AREADETECTOR)/db/NDFile.template
{
pattern { P, R, PORT, TIMEOUT, ADDR }
    { "BLxxI-DI-PHDGN-01", ":FILE:", "C1.FILE", "1", "0" }
}

# Macros:
#  P     Device Prefix
#  R     Device Suffix
#  PORT  Asyn Port name
file $(FFMPEGSERVER)/db/ffmpegFile.template
{
pattern { P, R, PORT }
    { "BLxxI-DI-PHDGN-01", ":FILE:", "C1.FILE" }
}
\endverbatim

<li> Add the startup commands to st.cmd
\verbatim

# Loading libraries
# -----------------

# Device initialisation
# ---------------------

cd "$(TOP)"

dbLoadDatabase "dbd/example.dbd"
example_registerRecordDeviceDriver(pdbbase)

# simDetectorConfig(portName, maxSizeX, maxSizeY, dataType, maxBuffers, maxMemory)
simDetectorConfig("C1.CAM", 1600, 1200, 1, 50, 0)

ffmpegServerConfigure(8081)
# ffmpegStreamConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr, maxMemory)
ffmpegStreamConfigure("C1.MJPG", 2, 0, "C1.CAM", "0", -1)

# ffmpegFileConfigure(portName, queueSize, blockingCallbacks, NDArrayPort, NDArrayAddr)
ffmpegFileConfigure("C1.FILE", 16, 0, "C1.CAM", 0)
\endverbatim
</ol>
**/
